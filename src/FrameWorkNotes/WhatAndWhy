== A testing framework is a set of guidelines or rules used for creating
  and  designing  test  cases.  These  guidelines  could  include  coding
  standards,  test-data  handling  methods,  object  repositories,
  processes for storing test results, or information on how to access
  external resources.
  - Framework  is  a  collection  of  concepts  you  know  in  an  organised
  manner  with  some  proper  rules,  validation,  proper  exception  and
  error handling which can be easily reuse, manage and scale.
  - In a framework we create set of multiple reusable components like
  methods  to  launch  browser,  methods  for  clicking,  sending  keys,
  selecting dropdowns,  switching between frames etc.
  - We  can  create  methods  for  reading  writing  from  external  data
  sources,  validation,  reporting  etc  and  can  place  it  in  such  a  way
  that  you  and  other  projects  can  also  use  it.  It  saves  efforts,  time
  and of course money of company.

====Why Framework?==
Framework defines the organization’s way of doing things – a ‘Single Standard’. Following this standard
would  result  in  the  project  team  achieving:
-----Script-less  representation  of  Automated  tests:
-- The  testing  framework  should  offer  point-and-click  interface  for  accessing  and  interacting  with  the
        application components under test—as opposed to presenting line after line of scripting.
- Testers  should  be  able  to  visualize  each  step  of  the  business  scenario,  view  and  edit  test  cases
       intuitively. This will shorten the learning curve for testers and help QA teams meet deadlines.--
-- Data  Driven  tests :  Excel  A  key  benefit  of  automating  functional  testing  is  the  ability  to  test  large
      volumes  of  data  on  the  system  quickly.  But  you  must  be  able  to  manipulate  the  data  sets,  perform
      calculations, and quickly create hundreds of test iterations and permutations with minimal effort.
-- Concise Reporting: The  framework  must  automatically  generate  reports  of  the  test  run  and  show  the
      results in an easy-to-read format. The reports should provide specifics about where application failures
      occurred and what test data was used.
--- ● Reports  must  present  application  screenshots  for  every  step  to  highlight  any  discrepancies  and
    provide  detailed  explanations  of  each  checkpoint  pass  and  failure.  Reports  must  also  be  easily
    shared across the entire QA and development teams.
-- ● Standard Scripting and Team Consistency:  Modular Scripting standard should be maintained across
   the  framework  library  creation,  which  includes  business  components,  system  communications,
   data  check  points,  loggers,  reporters  etc.  Project  team  should  follow  the  defined  scripting
   standards.  Published  standards  across  the  project  team  pre-empt  the  effort  involved  in  duplicate
   coding, which prevent individuals from following their own coding standards.
-- ● Implement  and  Maximize  Re-Usability:  Documents  Establish  the  developed  libraries  across  the
   organization/project  team/product  team,  i.e.  publish  the  library  and  provide  access  rights.
   Utilities/components  shared  across  the  team.  Usage  of  available  libraries.  Minimized  effort  for
   repeated regression cycle.


==

